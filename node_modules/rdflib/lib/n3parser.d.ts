export default createSinkParser;
export class SinkParser {
    constructor(store: any, openFormula: any, thisDoc: any, baseURI: any, genPrefix: any, metaURI: any, flags: any, why: any);
    _bindings: any;
    _flags: any;
    _store: any;
    _thisDoc: any;
    source: any;
    lines: number;
    statementCount: number;
    startOfLine: number;
    previousLine: number;
    _genPrefix: any;
    keywords: any;
    keywordsSet: number;
    _anonymousNodes: any;
    _variables: any;
    _parentVariables: any;
    _reason: any;
    _reason2: any;
    _baseURI: any;
    _formula: any;
    _context: any;
    _parentContext: any;
    here(i: any): string;
    formula(): any;
    loadStream(stream: any): any;
    loadBuf(buf: any): any;
    feed(octets: any): void;
    directiveOrStatement(str: any, h: any): any;
    tok(tok: any, str: any, i: any): any;
    directive(str: any, i: any): any;
    bind(qn: any, uri: any): void;
    setKeywords(k: any): void;
    startDoc(): void;
    endDoc(): any;
    makeStatement(quad: any): void;
    statement(str: any, i: any): any;
    subject(str: any, i: any, res: any): any;
    verb(str: any, i: any, res: any): any;
    prop(str: any, i: any, res: any): any;
    item(str: any, i: any, res: any): any;
    blankNode(uri: any): any;
    path(str: any, i: any, res: any): any;
    anonymousNode(ln: any): any;
    node(str: any, i: any, res: any, subjectAlready: any): any;
    property_list(str: any, i: any, subj: any): any;
    commaSeparatedList(str: any, j: any, res: any, ofUris: any): any;
    objectList(str: any, i: any, res: any): any;
    checkDot(str: any, i: any): any;
    uri_ref2(str: any, i: any, res: any): any;
    skipSpace(str: any, i: any): any;
    variable(str: any, i: any, res: any): any;
    bareWord(str: any, i: any, res: any): any;
    qname(str: any, i: any, res: any): any;
    object(str: any, i: any, res: any): any;
    nodeOrLiteral(str: any, i: any, res: any): any;
    strconst(str: any, i: any, delim: any): any;
    uEscape(str: any, i: any, startline: any): any;
    UEscape(str: any, i: any, startline: any): any;
}
declare function createSinkParser(store: any, openFormula: any, thisDoc: any, baseURI: any, genPrefix: any, metaURI: any, flags: any, why: any): SinkParser;
