import { separator } from '../utils/constants.js';
import { termReader, termWriter } from './terms.js';
export const quadWriter = {
    writtenValueLength: 0,
    write(prefix, value, baseValueOffset, quad, termNames, prefixes) {
        let ret = prefix;
        let valueOffset = baseValueOffset;
        for (let t = 0, term; t < termNames.length; t += 1) {
            term = quad[termNames[t]];
            ret += termWriter.write(value, valueOffset, term, prefixes) + separator;
            valueOffset += termWriter.writtenValueLength;
        }
        this.writtenValueLength = valueOffset - baseValueOffset;
        return ret;
    },
};
export const quadReader = {
    subject: null,
    predicate: null,
    object: null,
    graph: null,
    read(key, keyOffset, value, valueOffset, termNames, factory, prefixes) {
        for (let t = 0, termName; t < termNames.length; t += 1) {
            termName = termNames[t];
            this[termName] = termReader.read(key, keyOffset, value, valueOffset, factory, prefixes);
            keyOffset += termReader.readKeyChars + separator.length;
            valueOffset += termReader.readValueLength;
        }
        return factory.quad(this.subject, this.predicate, this.object, this.graph);
    },
};
//# sourceMappingURL=quads.js.map